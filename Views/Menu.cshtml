@using Orchard.Utility.Extensions;
@using Raptor.DetailAdmin;
@{
    IEnumerable<dynamic> firstLevelMenuItems = Model;
}
<ul id="dashboard-menu">
    @foreach (var firstLevelMenuItem in Model) {
        IEnumerable<dynamic> secondLevelMenuItems = firstLevelMenuItem;
        var firstOfTheSecond = secondLevelMenuItems.FirstOrDefault();
        <li>
            @if (secondLevelMenuItems.Count(menuItem => !menuItem.LocalNav) > 1 || !firstLevelMenuItem.LinkToFirstChild) {
                <a href="@(firstOfTheSecond != null && firstLevelMenuItem.LinkToFirstChild && (firstOfTheSecond.RouteValues != null || HasText(firstOfTheSecond.Url)) ? (string)firstOfTheSecond.Href : firstLevelMenuItem.RouteValues != null || HasText(firstLevelMenuItem.Url) ? (string)firstLevelMenuItem.Href : "#")" class="dropdown-toggle"><i class="icon-@MenuIcon.GetMenuIcon(firstLevelMenuItem.Text.Text.ToLowerInvariant())"></i><span>@firstLevelMenuItem.Text.Text</span><i class="icon-chevron-right"></i></a>
                <ul class="submenu">
                    @{ var first = true;}
                    @foreach (var secondLevelMenuItem in secondLevelMenuItems.Where(menuItem => !menuItem.LocalNav)) {
                        if (first && firstLevelMenuItem.LinkToFirstChild) {
                            first = false;
                            continue;
                        }
                        <li>
                            <i class="icon-@MenuIcon.GetMenuIcon((secondLevelMenuItem.Text).ToString().ToLowerInvariant())"></i><a href="@secondLevelMenuItem.Href">@secondLevelMenuItem.Text</a>
                        </li>
                    }
                </ul>
            }
            else {
                <a href="@(firstOfTheSecond != null && firstLevelMenuItem.LinkToFirstChild && (firstOfTheSecond.RouteValues != null || HasText(firstOfTheSecond.Url)) ? (string)firstOfTheSecond.Href : firstLevelMenuItem.RouteValues != null || HasText(firstLevelMenuItem.Url) ? (string)firstLevelMenuItem.Href : "#")"><i class="icon-@MenuIcon.GetMenuIcon(firstLevelMenuItem.Text.Text.ToLowerInvariant())"></i><span>@firstLevelMenuItem.Text.Text</span></a>
            }
        </li>
    }
</ul>
